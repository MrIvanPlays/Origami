From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <ivan@mrivanplays.com>
Date: Sat, 1 Aug 2020 13:38:23 +0300
Subject: [PATCH] Remove reload command


diff --git a/src/main/java/org/bukkit/command/defaults/ReloadCommand.java b/src/main/java/org/bukkit/command/defaults/ReloadCommand.java
index 0c7ba0718de2b93d013968ca0fec34ffd423990f..b10510d65b2ceb26ca4c3c360996deddf274c2e9 100644
--- a/src/main/java/org/bukkit/command/defaults/ReloadCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/ReloadCommand.java
@@ -1,13 +1,14 @@
 package org.bukkit.command.defaults;
 
+import org.jetbrains.annotations.NotNull;
+
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.List;
+
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
 import org.bukkit.command.Command;
 import org.bukkit.command.CommandSender;
-import org.jetbrains.annotations.NotNull;
 
 public class ReloadCommand extends BukkitCommand {
     public ReloadCommand(@NotNull String name) {
@@ -20,6 +21,19 @@ public class ReloadCommand extends BukkitCommand {
 
     @Override
     public boolean execute(@NotNull CommandSender sender, @NotNull String currentAlias, @NotNull String[] args) { // Paper
+        // Origami start - fix lag
+        // noinspection ConstantConditions
+        if (true) {
+            sender.sendMessage(ChatColor.RED + "Operation denied.");
+            sender.sendMessage(ChatColor.RED + "Reload command SHOULD NEVER EVER EVER be used in whatever circumstances.");
+            sender.sendMessage(ChatColor.RED + "The people of Origami had disabled it in order to stop you from doing this");
+            sender.sendMessage(ChatColor.RED + "Instead of restarting your server.");
+            sender.sendMessage(ChatColor.RED + "---------------------------------------------");
+            sender.sendMessage(ChatColor.RED + "RESTART YOUR SERVER AND NEVER USE /reload");
+            sender.sendMessage(ChatColor.YELLOW + "For plugin developers: learn what a HOTSWAP AGENT is and stop using /reload");
+            return true;
+        }
+        // Origami end
         if (!testPermission(sender)) return true;
 
         // Paper start - Reload permissions.yml & require confirm

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <ivan@mrivanplays.com>
Date: Sun, 19 Jul 2020 12:35:53 +0300
Subject: [PATCH] Better handling of tracker timings in PlayerChunkMap


diff --git a/src/main/java/net/minecraft/server/PlayerChunkMap.java b/src/main/java/net/minecraft/server/PlayerChunkMap.java
index d1e47e3f6c31c89712d2869d4fc5c2c5e3b71cbf..ede6f0db1609215f82802abe0bd44e1af36c99b5 100644
--- a/src/main/java/net/minecraft/server/PlayerChunkMap.java
+++ b/src/main/java/net/minecraft/server/PlayerChunkMap.java
@@ -2083,7 +2083,7 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
         PlayerChunkMap.EntityTracker playerchunkmap_entitytracker;
         ObjectIterator objectiterator;
         world.timings.tracker1.startTiming(); // Paper
-
+        try { // Origami
         for (objectiterator = this.trackedEntities.values().iterator(); objectiterator.hasNext(); playerchunkmap_entitytracker.trackerEntry.a()) {
             playerchunkmap_entitytracker = (PlayerChunkMap.EntityTracker) objectiterator.next();
             SectionPosition sectionposition = playerchunkmap_entitytracker.e;
@@ -2100,17 +2100,22 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
                 playerchunkmap_entitytracker.e = sectionposition1;
             }
         }
+        } finally { // Origami
         world.timings.tracker1.stopTiming(); // Paper
+        } // Origami
 
         if (!list.isEmpty()) {
             objectiterator = this.trackedEntities.values().iterator();
 
             world.timings.tracker2.startTiming(); // Paper
+            try { // Origami
             while (objectiterator.hasNext()) {
                 playerchunkmap_entitytracker = (PlayerChunkMap.EntityTracker) objectiterator.next();
                 playerchunkmap_entitytracker.track(list);
             }
+            } finally { // Origami
             world.timings.tracker2.stopTiming(); // Paper
+            } // Origami
         }
 
 

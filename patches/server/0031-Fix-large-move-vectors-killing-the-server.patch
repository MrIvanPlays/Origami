From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <spottedleaf@spottedleaf.dev>
Date: Sat, 8 Aug 2020 18:12:16 +0300
Subject: [PATCH] Fix large move vectors killing the server


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 3074a136568f3a0c937c252ad1aaf9edf2b4b7d5..ab621f007366c6c2c2cfd7f57bafbb39c303a549 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -338,19 +338,24 @@ public class PlayerConnection implements PacketListenerPlayIn {
 
             if (entity != this.player && entity.getRidingPassenger() == this.player && entity == this.r) {
                 WorldServer worldserver = this.player.getWorldServer();
-                double d0 = entity.locX();
-                double d1 = entity.locY();
-                double d2 = entity.locZ();
-                double d3 = packetplayinvehiclemove.getX();
-                double d4 = packetplayinvehiclemove.getY();
-                double d5 = packetplayinvehiclemove.getZ();
+                double d0 = entity.locX(); double fromX = d0; // Origami - OBFHELPER
+                double d1 = entity.locY(); double fromY = d1; // Origami - OBFHELPER
+                double d2 = entity.locZ(); double fromZ = d2; // Origami - OBFHELPER
+                double d3 = packetplayinvehiclemove.getX(); double toX = d3; // Origami - OBFHELPER
+                double d4 = packetplayinvehiclemove.getY(); double toY = d4; // Origami - OBFHELPER
+                double d5 = packetplayinvehiclemove.getZ(); double toZ = d5; // Origami - OBFHELPER
                 float f = packetplayinvehiclemove.getYaw();
                 float f1 = packetplayinvehiclemove.getPitch();
                 double d6 = d3 - this.s;
                 double d7 = d4 - this.t;
                 double d8 = d5 - this.u;
                 double d9 = entity.getMot().g();
-                double d10 = d6 * d6 + d7 * d7 + d8 * d8;
+                // Origami start
+                double currDeltaX = toX - fromX;
+                double currDeltaY = toY - fromY;
+                double currDeltaZ = toZ - fromZ;
+                double d10 = Math.max(d6 * d6 + d7 * d7 + d8 * d8, (currDeltaX * currDeltaX + currDeltaY * currDeltaY + currDeltaZ * currDeltaZ) - 1);
+                // Origami end
 
 
                 // CraftBukkit start - handle custom speeds and skipped ticks
@@ -1023,7 +1028,12 @@ public class PlayerConnection implements PacketListenerPlayIn {
                         double d8 = d5 - this.m;
                         double d9 = d6 - this.n;
                         double d10 = this.player.getMot().g();
-                        double d11 = d7 * d7 + d8 * d8 + d9 * d9;
+                        // Origami start
+                        double currDeltaX = toX - prevX;
+                        double currDeltaY = toY - prevY;
+                        double currDeltaZ = toZ - prevZ;
+                        double d11 = Math.max(d7 * d7 + d8 * d8 + d9 * d9, (currDeltaX * currDeltaX + currDeltaY * currDeltaY + currDeltaZ * currDeltaZ) - 1);
+                        // Origami end
 
                         if (this.player.isSleeping()) {
                             if (d11 > 1.0D) {

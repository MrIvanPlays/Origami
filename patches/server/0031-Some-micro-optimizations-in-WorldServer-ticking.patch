From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <ivan@mrivanplays.com>
Date: Sun, 19 Jul 2020 18:58:04 +0300
Subject: [PATCH] Some micro optimizations in WorldServer ticking


diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index b81331bcdf320f79f1a9b54b67950aeaa1e7761f..f0f727fa405f0d7eefb87192e0a76c462c0222a0 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -404,12 +404,17 @@ public class WorldServer extends World implements GeneratorAccessSeed {
             this.server.getPlayerList().sendAll(new PacketPlayOutGameStateChange(PacketPlayOutGameStateChange.i, this.thunderLevel));
         }
         // */
-        for (int idx = 0; idx < this.players.size(); ++idx) {
-            if (((EntityPlayer) this.players.get(idx)).world == this) {
-                ((EntityPlayer) this.players.get(idx)).tickWeather();
+        // Origami start
+        for (EntityPlayer player : players) {
+            if (player.world == this) {
+                player.tickWeather();
+                player.updateWeather(this.lastRainLevel, this.rainLevel, this.lastThunderLevel, this.thunderLevel);
+                if (flag != this.isRaining()) player.setPlayerWeather((!flag ? WeatherType.DOWNFALL : WeatherType.CLEAR), false);
+                // Origami end
             }
         }
 
+        /* // Origami start - moved up
         if (flag != this.isRaining()) {
             // Only send weather packets to those affected
             for (int idx = 0; idx < this.players.size(); ++idx) {
@@ -423,11 +428,16 @@ public class WorldServer extends World implements GeneratorAccessSeed {
                 ((EntityPlayer) this.players.get(idx)).updateWeather(this.lastRainLevel, this.rainLevel, this.lastThunderLevel, this.thunderLevel);
             }
         }
+         */ // Origami end
         // CraftBukkit end
 
+        // Origami start
+        /*
         if (this.everyoneSleeping && this.players.stream().noneMatch((entityplayer) -> {
             return !entityplayer.isSpectator() && !entityplayer.isDeeplySleeping() && !entityplayer.fauxSleeping; // CraftBukkit
         })) {
+         */
+        Runnable runnable = () -> {
             // CraftBukkit start
             long l = this.worldData.getDayTime() + 24000L;
             TimeSkipEvent event = new TimeSkipEvent(this.getWorld(), TimeSkipEvent.SkipReason.NIGHT_SKIP, (l - l % 24000L) - this.getDayTime());
@@ -447,7 +457,15 @@ public class WorldServer extends World implements GeneratorAccessSeed {
             if (this.getGameRules().getBoolean(GameRules.DO_WEATHER_CYCLE)) {
                 this.clearWeather();
             }
+        };
+        if (everyoneSleeping) {
+            boolean noneMatch = true;
+            for (EntityPlayer entityplayer : players) {
+                if (entityplayer.isSpectator() && entityplayer.isDeeplySleeping() && entityplayer.fauxSleeping) { noneMatch = false;break; }
+            }
+            if (noneMatch) runnable.run();
         }
+        // Origami end
 
         this.N();
         this.b();

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <ivan@mrivanplays.com>
Date: Sun, 19 Jul 2020 18:58:04 +0300
Subject: [PATCH] Some micro optimizations in WorldServer ticking


diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index b81331bcdf320f79f1a9b54b67950aeaa1e7761f..b9b412fd1207e972f84a2949afa7a2a66ce98601 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -404,9 +404,10 @@ public class WorldServer extends World implements GeneratorAccessSeed {
             this.server.getPlayerList().sendAll(new PacketPlayOutGameStateChange(PacketPlayOutGameStateChange.i, this.thunderLevel));
         }
         // */
-        for (int idx = 0; idx < this.players.size(); ++idx) {
-            if (((EntityPlayer) this.players.get(idx)).world == this) {
-                ((EntityPlayer) this.players.get(idx)).tickWeather();
+        for (EntityPlayer player : players) { // Origami
+            if (player.world == this) { // Origami
+                player.tickWeather(); // Origami
+                player.updateWeather(this.lastRainLevel, this.rainLevel, this.lastThunderLevel, this.thunderLevel); // Origami
             }
         }
 
@@ -418,16 +419,22 @@ public class WorldServer extends World implements GeneratorAccessSeed {
                 }
             }
         }
+        /* // Origami start - moved up
         for (int idx = 0; idx < this.players.size(); ++idx) {
             if (((EntityPlayer) this.players.get(idx)).world == this) {
                 ((EntityPlayer) this.players.get(idx)).updateWeather(this.lastRainLevel, this.rainLevel, this.lastThunderLevel, this.thunderLevel);
             }
         }
+         */ // Origami end
         // CraftBukkit end
 
+        // Origami start
+        /*
         if (this.everyoneSleeping && this.players.stream().noneMatch((entityplayer) -> {
             return !entityplayer.isSpectator() && !entityplayer.isDeeplySleeping() && !entityplayer.fauxSleeping; // CraftBukkit
         })) {
+         */
+        Runnable runnable = () -> {
             // CraftBukkit start
             long l = this.worldData.getDayTime() + 24000L;
             TimeSkipEvent event = new TimeSkipEvent(this.getWorld(), TimeSkipEvent.SkipReason.NIGHT_SKIP, (l - l % 24000L) - this.getDayTime());
@@ -447,7 +454,15 @@ public class WorldServer extends World implements GeneratorAccessSeed {
             if (this.getGameRules().getBoolean(GameRules.DO_WEATHER_CYCLE)) {
                 this.clearWeather();
             }
+        };
+        if (everyoneSleeping) {
+            boolean noneMatch = true;
+            for (EntityPlayer entityplayer : players) {
+                if (entityplayer.isSpectator() && entityplayer.isDeeplySleeping() && entityplayer.fauxSleeping) { noneMatch = false;break; }
+            }
+            if (noneMatch) runnable.run();
         }
+        // Origami end
 
         this.N();
         this.b();
